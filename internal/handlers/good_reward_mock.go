// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/go-gophermart/internal/handlers/good_reward.go

// Package handlers is a generated GoMock package.
package handlers

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sbilibin2017/go-gophermart/internal/types"
)

// MockGoodRewardService is a mock of GoodRewardService interface.
type MockGoodRewardService struct {
	ctrl     *gomock.Controller
	recorder *MockGoodRewardServiceMockRecorder
}

// MockGoodRewardServiceMockRecorder is the mock recorder for MockGoodRewardService.
type MockGoodRewardServiceMockRecorder struct {
	mock *MockGoodRewardService
}

// NewMockGoodRewardService creates a new mock instance.
func NewMockGoodRewardService(ctrl *gomock.Controller) *MockGoodRewardService {
	mock := &MockGoodRewardService{ctrl: ctrl}
	mock.recorder = &MockGoodRewardServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGoodRewardService) EXPECT() *MockGoodRewardServiceMockRecorder {
	return m.recorder
}

// Register mocks base method.
func (m *MockGoodRewardService) Register(ctx context.Context, req *types.GoodRewardRegisterRequest) (*types.APIStatus, *types.APIStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", ctx, req)
	ret0, _ := ret[0].(*types.APIStatus)
	ret1, _ := ret[1].(*types.APIStatus)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Register indicates an expected call of Register.
func (mr *MockGoodRewardServiceMockRecorder) Register(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockGoodRewardService)(nil).Register), ctx, req)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/go-gophermart/go-gophermart/internal/server/server_configured.go

// Package server is a generated GoMock package.
package server

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAddresser is a mock of Addresser interface.
type MockAddresser struct {
	ctrl     *gomock.Controller
	recorder *MockAddresserMockRecorder
}

// MockAddresserMockRecorder is the mock recorder for MockAddresser.
type MockAddresserMockRecorder struct {
	mock *MockAddresser
}

// NewMockAddresser creates a new mock instance.
func NewMockAddresser(ctrl *gomock.Controller) *MockAddresser {
	mock := &MockAddresser{ctrl: ctrl}
	mock.recorder = &MockAddresserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAddresser) EXPECT() *MockAddresserMockRecorder {
	return m.recorder
}

// GetRunAddress mocks base method.
func (m *MockAddresser) GetRunAddress() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRunAddress")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRunAddress indicates an expected call of GetRunAddress.
func (mr *MockAddresserMockRecorder) GetRunAddress() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRunAddress", reflect.TypeOf((*MockAddresser)(nil).GetRunAddress))
}

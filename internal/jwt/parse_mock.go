// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/go-gophermart/internal/jwt/parse.go

// Package jwt is a generated GoMock package.
package jwt

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockJWTParserConfigurer is a mock of JWTParserConfigurer interface.
type MockJWTParserConfigurer struct {
	ctrl     *gomock.Controller
	recorder *MockJWTParserConfigurerMockRecorder
}

// MockJWTParserConfigurerMockRecorder is the mock recorder for MockJWTParserConfigurer.
type MockJWTParserConfigurerMockRecorder struct {
	mock *MockJWTParserConfigurer
}

// NewMockJWTParserConfigurer creates a new mock instance.
func NewMockJWTParserConfigurer(ctrl *gomock.Controller) *MockJWTParserConfigurer {
	mock := &MockJWTParserConfigurer{ctrl: ctrl}
	mock.recorder = &MockJWTParserConfigurerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWTParserConfigurer) EXPECT() *MockJWTParserConfigurerMockRecorder {
	return m.recorder
}

// GetSecretKey mocks base method.
func (m *MockJWTParserConfigurer) GetSecretKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecretKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSecretKey indicates an expected call of GetSecretKey.
func (mr *MockJWTParserConfigurerMockRecorder) GetSecretKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecretKey", reflect.TypeOf((*MockJWTParserConfigurer)(nil).GetSecretKey))
}

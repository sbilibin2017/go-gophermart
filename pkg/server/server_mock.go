// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/go-gophermart/go-gophermart/pkg/server/server.go

// Package server is a generated GoMock package.
package server

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockServerAddresser is a mock of ServerAddresser interface.
type MockServerAddresser struct {
	ctrl     *gomock.Controller
	recorder *MockServerAddresserMockRecorder
}

// MockServerAddresserMockRecorder is the mock recorder for MockServerAddresser.
type MockServerAddresserMockRecorder struct {
	mock *MockServerAddresser
}

// NewMockServerAddresser creates a new mock instance.
func NewMockServerAddresser(ctrl *gomock.Controller) *MockServerAddresser {
	mock := &MockServerAddresser{ctrl: ctrl}
	mock.recorder = &MockServerAddresserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServerAddresser) EXPECT() *MockServerAddresserMockRecorder {
	return m.recorder
}

// GetRunAddress mocks base method.
func (m *MockServerAddresser) GetRunAddress() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRunAddress")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRunAddress indicates an expected call of GetRunAddress.
func (mr *MockServerAddresserMockRecorder) GetRunAddress() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRunAddress", reflect.TypeOf((*MockServerAddresser)(nil).GetRunAddress))
}

// Code generated by MockGen. DO NOT EDIT.
// Source: /home/sergey/Go/go-gophermart/go-gophermart/pkg/jwt/encoder.go

// Package jwt is a generated GoMock package.
package jwt

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockJWTEncodeConfig is a mock of JWTEncodeConfig interface.
type MockJWTEncodeConfig struct {
	ctrl     *gomock.Controller
	recorder *MockJWTEncodeConfigMockRecorder
}

// MockJWTEncodeConfigMockRecorder is the mock recorder for MockJWTEncodeConfig.
type MockJWTEncodeConfigMockRecorder struct {
	mock *MockJWTEncodeConfig
}

// NewMockJWTEncodeConfig creates a new mock instance.
func NewMockJWTEncodeConfig(ctrl *gomock.Controller) *MockJWTEncodeConfig {
	mock := &MockJWTEncodeConfig{ctrl: ctrl}
	mock.recorder = &MockJWTEncodeConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWTEncodeConfig) EXPECT() *MockJWTEncodeConfigMockRecorder {
	return m.recorder
}

// GetExp mocks base method.
func (m *MockJWTEncodeConfig) GetExp() time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExp")
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// GetExp indicates an expected call of GetExp.
func (mr *MockJWTEncodeConfigMockRecorder) GetExp() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExp", reflect.TypeOf((*MockJWTEncodeConfig)(nil).GetExp))
}

// GetSecretKey mocks base method.
func (m *MockJWTEncodeConfig) GetSecretKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecretKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSecretKey indicates an expected call of GetSecretKey.
func (mr *MockJWTEncodeConfigMockRecorder) GetSecretKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecretKey", reflect.TypeOf((*MockJWTEncodeConfig)(nil).GetSecretKey))
}
